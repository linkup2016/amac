
CREATE TABLE MEMBERS_LIST (
    MEMBER_ID NUMBER PRIMARY KEY,
    ENROLLMENT_DATE DATE,
    EMAIL VARCHAR2(255),
    PHONE_NUMBER VARCHAR2(20),
    FIRST_NAME VARCHAR2(255),
    LAST_NAME VARCHAR2(255),
    CALL VARCHAR2(255),
    TEXT VARCHAR2(255),
    EMAIL_ME VARCHAR2(255),
    CONTRIBUTION NUMBER,
    VOLUNTARY_AREA_CONTRIBUTION CLOB, -- Change data type to CLOB
    PAYABLE_ORDER_ID VARCHAR2(255),
    PAYABLE_TOTAL NUMBER(10,2),
    PAYABLE_STATUS VARCHAR2(255),
    PAYABLE_PAYMENT_METHOD VARCHAR2(255),
    PAYABLE_TRANSACTION_ID VARCHAR2(255),
    PAYABLE_LAST_UPDATED DATE
);


-- To create a sequence in Oracle that starts with 10,000 and use it to populate the primary key column in the "Members" table, you can use the following SQL script:

-- Create a sequence
CREATE SEQUENCE member_id_seq
    START WITH 10000
    INCREMENT BY 1
    MAXVALUE 999999999999999999999999999
    CYCLE
    NOCACHE;

-- Alter the "Members" table to use the sequence
-- as the default value for the "member_id" column
ALTER TABLE Members
MODIFY member_id DEFAULT member_id_seq.NEXTVAL;


CREATE TABLE MEMBERSHIP_CONTRIBUTION_TRACKER (
    MEMBER_ID NUMBER PRIMARY KEY,
    JANUARY NUMBER,
    FEBRUARY NUMBER,
    MARCH NUMBER,
    APRIL NUMBER,
    MAY NUMBER,
    JUNE NUMBER,
    JULY NUMBER,
    AUGUST NUMBER,
    SEPTEMBER NUMBER,
    OCTOBER NUMBER,
    NOVEMBER NUMBER,
    DECEMBER NUMBER
);



drop table membership_contribution_tracker;

CREATE TABLE MEMBERSHIP_CONTRIBUTION_TRACKER
(
    MEMBERSHIP_CONTRIBUTION_TRACKER_ID NUMBER PRIMARY KEY,
    MEMBER_ID                          NUMBER,
    JANUARY                            NUMBER,
    FEBRUARY                           NUMBER,
    MARCH                              NUMBER,
    APRIL                              NUMBER,
    MAY                                NUMBER,
    JUNE                               NUMBER,
    JULY                               NUMBER,
    AUGUST                             NUMBER,
    SEPTEMBER                          NUMBER,
    OCTOBER                            NUMBER,
    NOVEMBER                           NUMBER,
    DECEMBER                           NUMBER,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

drop table CREDIT_CARD_DETAILS;

CREATE TABLE CREDIT_CARD_DETAILS
(
    CREDIT_CARD_ID  NUMBER PRIMARY KEY,
    CARDHOLDER_NAME VARCHAR2(255),
    CARD_NUMBER     VARCHAR2(20),
    EXPIRATION_DATE DATE,
    CVV             VARCHAR2(4),
    BILLING_ADDRESS VARCHAR2(255),
    CREDIT_LIMIT    NUMBER(10, 2),
    MEMBER_ID       NUMBER,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

ALTER TABLE PAYMENT_DETAILS
    ADD CONSTRAINT FK_CREDIT_CARD_DETAILS
        FOREIGN KEY (PAYMENT_METHOD_DETAILS)
            REFERENCES CREDIT_CARD_DETAILS (CREDIT_CARD_ID);

drop table PAYMENT_DETAILS;

CREATE TABLE PAYMENT_DETAILS
(
    PAYMENT_DETAILS_ID     NUMBER PRIMARY KEY,
    MEMBER_ID              NUMBER,
    PAYMENT_METHOD         VARCHAR2(255),
    PAYMENT_FREQUENCY      VARCHAR2(50),
    PAYMENT_METHOD_DETAILS NUMBER,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

CREATE SEQUENCE PAYMENT_DETAILS_ID_SEQ
    START WITH 500000
    INCREMENT BY 1
    MAXVALUE 999999999999999999999999999
    CYCLE
    NOCACHE;

ALTER TABLE PAYMENT_DETAILS
    MODIFY PAYMENT_DETAILS_ID DEFAULT PAYMENT_DETAILS_ID_SEQ.NEXTVAL;

drop table CREDIT_CARD_DETAILS;

CREATE TABLE CREDIT_CARD_DETAILS
(
    CREDIT_CARD_ID     NUMBER PRIMARY KEY,
    CARDHOLDER_NAME    VARCHAR2(255),
    CARD_NUMBER        VARCHAR2(20),
    EXPIRATION_DATE    DATE,
    CVV                VARCHAR2(4),
    BILLING_ADDRESS    VARCHAR2(255),
    CREDIT_LIMIT       NUMBER(10, 2),
    PAYMENT_DETAILS_ID NUMBER,
    MEMBER_ID          NUMBER,
    FOREIGN KEY (PAYMENT_DETAILS_ID) REFERENCES PAYMENT_DETAILS (PAYMENT_DETAILS_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

drop table BANK_PAYMENT_DETAILS;

CREATE TABLE BANK_PAYMENT_DETAILS
(
    BANK_PAYMENT_ID    NUMBER PRIMARY KEY,
    PAYMENT_DETAILS_ID NUMBER,
    MEMBER_ID          NUMBER,
    ACCOUNT_NUMBER     VARCHAR2(20),
    ROUTING_NUMBER     VARCHAR2(20), -- New column for routing number
    BANK_NAME          VARCHAR2(255),
    FOREIGN KEY (PAYMENT_DETAILS_ID) REFERENCES PAYMENT_DETAILS (PAYMENT_DETAILS_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

drop table BANK_PAYMENT_DETAILS;

CREATE TABLE CASH_PAYMENT_DETAILS
(
    CASH_PAYMENT_ID    NUMBER PRIMARY KEY,
    PAYMENT_DETAILS_ID NUMBER,
    MEMBER_ID          NUMBER,
    RECEIPT_NUMBER     VARCHAR2(20),
    FOREIGN KEY (PAYMENT_DETAILS_ID) REFERENCES PAYMENT_DETAILS (PAYMENT_DETAILS_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS (MEMBER_ID)
);

drop table PREFERRED_COMMUNICATION_WAYS;

CREATE TABLE PREFERRED_COMMUNICATION_WAYS (
                                              PREFERRED_COMMUNICATION_WAYS_ID NUMBER,
                                              MEMBER_ID NUMBER,
                                              CALL VARCHAR2(50),
                                              TEXT VARCHAR2(50),
                                              EMAIL VARCHAR2(50),
                                              OTHER VARCHAR2(50),
                                              FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS(MEMBER_ID)
);

CREATE SEQUENCE comm_ways_id_seq
    START WITH 300000
    INCREMENT BY 1
    MAXVALUE 9999999999999999
    CYCLE
    NOCACHE;


ALTER TABLE PREFERRED_COMMUNICATION_WAYS
    MODIFY PREFERRED_COMMUNICATION_WAYS_ID DEFAULT comm_ways_id_seq.NEXTVAL;